<!--
//     __ __     _      __   __  _                __   
//    / //_/__  (_)__ _/ /  / /_(_)__  ___ ____ _/ /__ 
//   / ,< / _ \/ / _ `/ _ \/ __/ / _ \/ _ `/ _ `/ / -_)
//  /_/|_/_//_/_/\_, /_//_/\__/_/_//_/\_, /\_,_/_/\__/ 
//              /___/                /___/          
//  Open-source Twitter analytics...with style!
-->
<project xmlns:jacoco="antlib:org.jacoco.ant">
	
	<!-- SETUP VARIABLES AND PATHS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<property name="" value="" />

	<property name="lib.dir" value="lib" />
	<property name="src.dir" location="src/" />
	<property name="build.dir" location="bin/" />
	<property name="dist.dir" location="dist/" />
	<property name="dist.name" value="tweetanalyze" />
	<property name="config.dir" value="config" />
	<property name="version" value="1.0" />

	<!-- The standard classpath for building the system -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}" includes="*.jar" />
	</path>

	<!-- The classpath for running the system -->
	<path id="run.classpath">
		<pathelement path="${build.dir}"/>
		<fileset dir="${lib.dir}" includes="*.jar"/>
	</path>

	<property name="result.dir" location="./bin" />
	<property name="result.classes.dir" location="${result.dir}/" />
	<property name="result.report.dir" location="${result.dir}/site/jacoco" />
	<property name="result.exec.file" location="${result.dir}/jacoco.exec" />

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="${lib.dir}/jacocoant.jar"/>
    </taskdef>
    <taskdef name="ncss" classname="javancss.JavancssAntTask" classpath="lib/javancss.jar:lib/jhbasic.jar:lib/ccl.jar"/>

	<!-- BASIC TARGETS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- CLEANING TASK - "ant clean" -->
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${result.dir}"/>
	</target>
	
	<!-- COMPILING TASK - "ant compile" -->  
	<target name="compile">
		<mkdir dir="${build.dir}"/>
		<javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false" debug="true" debuglevel="vars,lines,source">
			<classpath refid="build.classpath"/>
			<compilerarg value="-Xlint:unchecked"/> 
			<compilerarg value="-Xlint:deprecation"/> 
		</javac>
	</target>

	<!-- RUNNING TARGETS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->


	<!-- RUNNING TASK - "ant run" -->
	<target name="run" depends="compile">
		<java fork="true" classname="edu.allegheny.tweetanalyze.ui.cli.KnightingaleCLI" maxmemory="1024m">
			<arg line="${args}"/>
			<classpath refid="run.classpath" />
        </java>
	</target>
	
	<!-- RUNNING TASK - "ant analyze" -->
	<target name="analyze" depends="compile">
		<java fork="true" classname="edu.allegheny.tweetanalyze.analytics.Analyzer" maxmemory="1024m">
			<arg line="${args}"/>
			<classpath refid="run.classpath" />
        </java>
	</target>
	
	<!-- RUNNING TASK - "ant clouds" -->
	<target name="clouds" depends="compile">
		<java fork="true" classname="edu.allegheny.tweetanalyze.ui.gui.UserCloud" maxmemory="1024m">
			<arg line="${args}"/>
			<classpath refid="run.classpath" />
        </java>
	</target>


	<!-- RUNNING TASK - "ant db" -->
	<target name="db" depends="compile">
		<java fork="true" classname="edu.allegheny.tweetanalyze.database.DatabaseHelper" maxmemory="1024m">
			<arg line="${args}"/>
			<classpath refid="run.classpath" />
        </java>
	</target>

	<!-- RUNNING TASK - "ant token" -->
	<target name="token" depends="compile">
		<java fork="true" classname="edu.allegheny.tweetanalyze.AccessTokenHelper" maxmemory="1024m">
			<arg line="${args}"/>
			<classpath refid="run.classpath" />
        </java>
	</target>

	<!-- RUNNING TASK - "ant refresh" -->
	<target name="refresh" depends="compile">
		<java fork="true" classname="edu.allegheny.tweetanalyze.TweetRefreshClient" maxmemory="1024m">
			<arg line="${args}"/>
			<classpath refid="run.classpath" />
        </java>
	</target>

	<!-- RUNNING TASK - "ant test" -->
	<target name="test" depends="compile">
		<junit fork="yes">
			<test name="edu.allegheny.tweetanalyze.test.MasterTestSuite" />
			<classpath refid="run.classpath" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>

	<!-- RUNNING TASK - "ant coveragetest" -->
	<target name="coveragetest" depends="compile">
		<jacoco:coverage destfile="${result.exec.file}" excludes="edu.allegheny.tweetanalyze.test.*">
			<junit fork="yes" forkmode="once">
				<test name="edu.allegheny.tweetanalyze.test.MasterTestSuite" />
				<classpath refid="run.classpath" />
				<formatter type="brief" usefile="false" />
			</junit>
		</jacoco:coverage>
	</target>

	<!-- RUNNING TASK - "ant coverage" -->
	<target name="coverage" depends="coveragetest">
		<jacoco:report>
			<executiondata>
				<file file="${result.exec.file}" />
			</executiondata>

			<structure name="tweetanalyzeCoverage Report">
				<classfiles>
					<fileset dir="${result.classes.dir}">
						<exclude name="**/gui/*.class" />
					    <exclude name="**/*Test*.class" />
      				</fileset>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${src.dir}" />
				</sourcefiles>
			</structure>
			
			<html destdir="${result.report.dir}/tweetanalyzeTest/" />
			<csv destfile="${result.report.dir}/tweetanalyzeTest/report.csv" />
			<xml destfile="${result.report.dir}/tweetanalyzeTest/report.xml" />
		</jacoco:report>
	</target>
	
	<!-- based on the example given on the JavaNCSS site -->
    <target name="ncss" depends="compile">
        <mkdir dir="${doc.dir}"/>
		<taskdef name="CCNCheck" classname="javancss.JavancssAntTask">
			<classpath refid="build.classpath"/>
		</taskdef>

        <ncss srcdir="${src.dir}"
                generateReport="yes" 
                outputfile="${doc.dir}/javancss-report.xml" 
                format="xml" 
	            ccnPerFuncMax="10"
                abortOnFail="false"/>
        <xslt basedir="${doc.dir}" destdir="${doc.dir}" includes="javancss-report.xml" style="${user.home}/.ant/etc/javancss2html.xsl"/>
  	</target>

	<!-- Based on the demo Javadoc settings on the Ant web page. -->
	<target name="javadoc">
		<javadoc packagenames="edu.allegheny.tweetanalyze.*"
				 sourcepath="src"
				 excludepackagenames="edu.allegheny.tweetanalyze.test"
				 defaultexcludes="yes"
				 destdir="bin/doc/api"
				 author="true"
				 version="true"
				 use="true"
				 windowtitle="tweetanalyze API">
			<doctitle><![CDATA[<h1>tweetanalyze</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2013, Hawk Weisman, Dibyojoti Mukherjee, Ian MacMillan, Gabriel Kelly, and Jake Ballinger</i>]]></bottom>
			<tag name="todo" scope="all" description="To do:"/>
			<link offline="true" href="http://docs.oracle.com/javase/7/docs/api/" packagelistLoc="C:\tmp"/>
			<link href="http://docs.oracle.com/javase/7/docs/api/"/>
		</javadoc>
	</target>

</project>
